---
import { urlFor } from '../utils/image';
import { PuffBlockItem } from '../utils/sanity';
import SanityPortableText from './SanityPortableText';
import Button from './Button';

const { block } = Astro.props;
---

<section class="">
	<div class="mx-auto w-full bg-background xs:max-w-container sm:max-w-container md:max-w-container">
		<div class={`mx-auto ${block.centeredText ? 'max-w-2xl' : 'max-w-4xl'}`}>
			{
				block.heading && (
					<h2 class="mx-auto mb-10 mt-0 w-fit text-balance text-4xl sm:mb-14 md:text-5xl">{block.heading}</h2>
				)
			}
			{
				block.items && (
					<div
						class={`grid gap-8 xs:gap-12 ${
							block.items.length % 2 === 1 ? '[&>div:last-child]:col-span-full' : ''
						} ${block.centeredText ? 'gap-8 xs:grid-cols-[repeat(auto-fill,minmax(250px,1fr))] xs:gap-12' : 'gap-4 xs:grid-cols-[repeat(auto-fill,minmax(320px,1fr))] xs:gap-10'}`}
					>
						{block.items.map((item: PuffBlockItem) => {
							return (
								<div class={`mx-auto w-full max-w-[420px] overflow-hidden ${block.centeredText ? 'text-center' : ''}`}>
									{item.image && (
										<img
											class={`block object-cover ${block.centeredText ? 'mx-auto mb-6 size-[125px] rounded-full sm:size-[150px]' : 'h-[200px] w-full'}`}
											src={urlFor(item.image).url()}
											alt=""
										/>
									)}
									<div class={`${block.centeredText ? '' : 'p-4 xs:p-6'}`}>
										{item.heading && <h3 class="mt-0 text-balance text-2xl font-bold sm:text-3xl">{item.heading}</h3>}
										<div class="block-content">
											{item.information && <SanityPortableText content={item?.information} client:only="react" />}
										</div>
										{item.button?.text && item.button.link && (
											<Button
												as="a"
												href={item.button.link}
												target={item.button.externalLink ? '_blank' : '_self'}
												className={`mt-4 w-fit ${block.centeredText ? 'mx-auto' : ''}`}
												variant="outline"
												iconEnd={
													item.button.externalLink
														? `<svg width="22" height="22" viewBox="0 0 24 24">
															<g fill="none" stroke="currentColor">
															<path d="M15 3.5h5.5m0 0V9m0-5.5l-8 8" />
															<path
																stroke-linecap="square"
																d="M11.5 5.5h-4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2-2v-4"
															/>
															</g>
														</svg>`
														: ''
												}
											>
												{item.button.text}
											</Button>
										)}
									</div>
								</div>
							);
						})}
					</div>
				)
			}
		</div>
	</div>
</section>
